/* Instruction: - Create class Bus with the following specifications: 
Class Bus: 
Constructor 
• constructor(busNumber, destinations): This initializes the properties  
'busNumber' and 'destinations'  
Properties 
• busNumber: A unique identifier for the bus, typically a number. 
• destinations: An array of strings, each representing a stop or destination 
along the bus's route. */

class Bus {
    constructor(busNumber, destinations) {
        this.busNumber = busNumber
        this.destinations = destinations
    }
}


/* Instruction: - Create class BusStop with the following specifications: 
Class BusStop: 
Constructor 
• constructor(destinations): This initializes the properties 'destinations'  
Properties 
• destinations: A string representing the primary location or area the bus 
stop serves. 
Methods 
• addBus(bus): Adds a bus to the bus stop if the bus's route includes the bus stop's 
desnation. 
bus: An instance of the Bus class. Returns A boolean value 
true if the bus was successfully added, false if not 
(e.g., if the bus's destinaions do not 
include the bus stop's desnation). 
• removeBus(busNumber): Removes a bus from the bus stop based on its number. 
busNumber: The number of the bus to remove. Returns A boolean value; true if 
a bus was found and removed, false if no bus with the given number was found. 
• listBuses(): Generates a list of all buses currently at the bus stop, including their 
numbers and des na ons.Returns An array of objects, each represen ng a bus at 
the bus stop with busNumber and des na ons proper es. If no buses are at the 
stop, returns an empty array. */


class BusStop {
    constructor(destinations) {
        this.destinations = destinations
        this.buses = [] //! สับสน ต้องตีความและถามเพื่อความเข้าใจ
    }

    addBus(bus) {

        if (bus.destinations.includes(this.destinations)) {
            this.buses.push(bus)
            return true
        } else return false
    }

    //!! WARNING
    removeBus(busNumber) {
        const foundIndex = this.buses.findIndex((bus) => bus.busNumber === busNumber)

        let removedBus = null
        if (foundIndex > -1) {
            removedBus = this.buses.splice(foundIndex, 1)
        }

        return Boolean(removedBus)

    }

    listBuses() {
        return this.buses
    }

}

//- Create a 'Bus' object for 'Practice 7'. Use a constructor in class.
const bus1 = new Bus(1, ['PrachaUtit43', 'PrachaUtit45', 'PrachaUtit50', 'Wat Khu Sang'])
console.log(bus1)
const bus2 = new Bus(2, ['IconSiam', 'SiamSquare', 'ChulaUniversity', 'Wat Khu Sang'])
console.log(bus2)


const busStop1 = new BusStop('PrachaUtit50')
console.log(busStop1);
const busStop2 = new BusStop('Wat Khu Sang')
console.log(busStop2);
console.log('bus3');
const busStop3 = new BusStop('Meow city')
console.log(busStop3);


console.log('test add bus');
console.log(busStop1.addBus(bus1));
console.log(busStop1.buses);
console.log(busStop1.addBus(bus2));
console.log(busStop2.addBus(bus1));
console.log(busStop2.addBus(bus2));


console.log('test delete bus from bus stop');
console.log(busStop2.removeBus(2));
console.log(busStop2.removeBus(3));
console.log(busStop2.listBuses());

console.log('test list');
console.log('bus stop 1');
console.log(busStop1.listBuses());
console.log('bus stop 2');
console.log(busStop2.listBuses());
console.log(busStop3.listBuses());

